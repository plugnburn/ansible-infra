---
- hosts: localhost
  connection: local
  gather_facts: true
  vars:
    key_name: "Gitlab + Jenkins + Nexus"
    instance_type_light: t2.micro
    instance_type_heavy: t2.small
    security_group: sg-4b9f0b2d
    image: ami-d2c924b2
    region: us-west-2
    vpc_subnet_id: subnet-1832f040
    tower_hostname: "ec2-52-88-80-83.us-west-2.compute.amazonaws.com"
    tower_provision_job_id: 23
  tasks:
    - name: Launch MySQL instance
      ec2:
        key_name: "{{ key_name }}"
        group_id: "{{ security_group }}"
        instance_type: "{{ instance_type_light }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        assign_public_ip: yes
        instance_tags:
          type: environment
          role: mysql
          Name: MySQL
        count_tag: 
          role: mysql
        exact_count: 1
        volumes: 
          - device_name: /dev/sda1
            volume_size: 8
            delete_on_termination: true
      register: ec2
    - name: Launch Tomcat instances
      ec2:
        key_name: "{{ key_name }}"
        group_id: "{{ security_group }}"
        instance_type: "{{ instance_type_heavy }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        assign_public_ip: yes
        instance_tags: 
          type: environment
          role: tomcat
          Name: Tomcat-Instance
        count_tag:
          role: tomcat
        exact_count: 3
        volumes: 
          - device_name: /dev/sda1
            volume_size: 8
            delete_on_termination: true
      register: ec2
    - name: Launch HAProxy instance
      ec2:
        key_name: "{{ key_name }}"
        group_id: "{{ security_group }}"
        instance_type: "{{ instance_type_light }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        assign_public_ip: yes
        instance_tags: 
          type: environment
          role: haproxy
          Name: HAProxy
        count_tag: 
          role: haproxy
        exact_count: 1
        user_data: |
          #!/bin/bash
          TOWER={{tower_hostname}}
          JOB={{tower_provision_job_id}}
          sleep 30
          retry_attempts=10
          attempt=0
          while [[ $attempt -lt $retry_attempts ]]
          do
             status_code=`curl -s -i -k -XPOST -H "Expect:" -H "Content-type: application/json" --user admin:{{current_tower_password}} http://${TOWER}/api/v1/job_templates/${JOB}/launch/ | head -n 1 | awk '{print $2}'`
             if [[ $status_code == 201 ]]
                 then
                 exit 0
             fi
             attempt=$(( attempt + 1 ))
             echo "${status_code} received... retrying in 1 minute. (Attempt ${attempt})"
             sleep 60
          done
          exit 1
        volumes: 
          - device_name: /dev/sda1
            volume_size: 8
            delete_on_termination: true
      register: ec2
    - name: Wait for SSH to come up
      local_action: wait_for host="{{ item.public_ip }}" port=22 delay=5 timeout=1200
      with_items: '{{ec2.instances}}'
