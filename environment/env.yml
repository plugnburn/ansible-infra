---
- hosts: tag_role_mysql
  remote_user: centos
  become: true
  tasks:
    - include: common.yml
    - name: activate Docker
      service: state=restarted enabled=yes name=docker
    - name: prepare sql population directory
      file: path=/tmp/sql state=directory mode=0755
    - name: prepare sql population script
      template: src=configs/initdb.sql dest=/tmp/sql/initdb.sql force=yes
    - name: activate MySQL
      docker_container:
        name: mysql
        image: "mysql:5.7"
        restart_policy: always
        hostname: "{{ ec2_public_dns_name }}"
        command: "--character-set-server=utf8 --collation-server=utf8_unicode_ci"
        volumes: 
          - /tmp/sql:/docker-entrypoint-initdb.d
        ports: ["3306:3306", "2222:22"]
        env:
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
          MYSQL_DATABASE: "{{ dbname }}"
          MYSQL_USER: "{{ mysql_user }}"
          MYSQL_PASSWORD: "{{ mysql_password }}"
    - debug: msg="MySQL hostname is {{ ec2_public_dns_name }}, root password is {{ mysql_root_password }}"
    - wait_for: port=3306 delay=10 timeout=1200
    - debug: msg="MySQL server is up"
    
- hosts: tag_role_tomcat
  remote_user: centos
  become: true
  vars:
    mysql_host: "{{ hostvars[groups['tag_role_mysql'][0]]['ec2_public_dns_name'] }}"
  tasks:
    - include: common.yml
    - name: prepare service overlay directory for Docker
      file: path=/etc/systemd/system/docker.service.d state=directory mode=0755
    - name: prepare service overlay for Docker
      template: src=configs/overlay.conf dest=/etc/systemd/system/docker.service.d/overlay.conf force=yes
    - name: activate Docker
      service: state=restarted enabled=yes name=docker
    - name: login to private Docker registry
      shell: "docker login -u {{ docker_registry_user }} -p {{ docker_registry_password }} {{ docker_registry_hostname }}:5000"
    - name: activate Tomcat
      docker_container:
        name: tomcat
        image: "{{ docker_repo_url }}"
        restart_policy: always
        hostname: "{{ ec2_public_dns_name }}"
        ports: ["8080:8080"]
        env:
          JAVA_OPTS: "-Djava.security.egd=file:/dev/./urandom -DDB_TYPE=MYSQL -DDB_DRIVER=com.mysql.jdbc.Driver -DDB_SUBDIR=mysql -DDB_URL=jdbc:mysql://{{ mysql_host }}:3306/{{ dbname }}?useUnicode=true\\&characterEncoding=UTF-8 -DDB_USERNAME={{ mysql_user }} -DDB_PASSWORD={{ mysql_password }}"
    - wait_for: port=8080 delay=10 timeout=1200
    - debug: msg="Tomcat backend {{ ec2_public_dns_name }}:8080 is up"

- hosts: tag_role_haproxy
  remote_user: centos
  become: true
  tasks:
    - include: common.yml
    - name: activate Docker
      service: state=restarted enabled=yes name=docker
    - name: create HAProxy config
      template: src=configs/haproxy.cfg dest=/tmp/haproxy.cfg force=yes
    - name: activate HAProxy
      docker_container:
        name: haproxy
        image: "haproxy:1.6.7-alpine"
        restart_policy: always
        hostname: "{{ ec2_public_dns_name }}"
        volumes:
          - /tmp/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
        ports: ["443:443", "80:80", "2222:22"]
    - debug: msg="HAProxy hostname is {{ ec2_public_dns_name }}"
    - wait_for: port=80 delay=10 timeout=1200
    - debug: msg="HAProxy frontend is up"
